trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageRepository: 'hworld' # Name of your image
  containerRegistry: 'docker-hub-connection' # Name of your Azure DevOps Docker Hub service connection
  registryLoginServer: 'docker.io' # Docker Hub registry

stages:
- stage: Build
  displayName: Build and Push Image
  jobs:
  - job: Build
    displayName: Build and Push
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: JavaToolInstaller@0
      displayName: 'Install Java 17'
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
    - task: Maven@3
      displayName: 'Build Java project with Maven'
      inputs:
        mavenPomFile: '$(Build.SourcesDirectory)/lab052/pom.xml'
        goals: 'package'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomFile: '$(Build.SourcesDirectory)/lab052/pom.xml'
    - script: |
        ls -R $(Build.SourcesDirectory)/lab052
      displayName: 'List directory contents for debugging'
    - task: Docker@2
      displayName: 'Build Docker image'
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/lab052/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)/lab052'
        repository: '$(imageRepository)' # For Docker Hub, use just the image name
        tags: |
          $(tag)
        arguments: '--no-cache'
    - task: Docker@2
      displayName: 'Push Docker image to Docker Hub'
      inputs:
        command: push
        containerRegistry: 'dockerhub-pat-sri' # Name of your Docker Hub service connection
        repository: '$(imageRepository)'
        tags: |
          $(tag)
    - script: |
        docker images
      displayName: 'List Docker images on agent for debugging'